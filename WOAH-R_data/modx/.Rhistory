install.packages("shiny"); install.packages("LDAvis"); install.packages("XML"); install.packages("xml2"); install.packages("RCurl"); install.packages("httr"); install.packages("lda"); install.packages("servr"); install.packages("markdown"); install.packages("data.table"); install.packages("stringr"); install.packages("plyr"); install.packages("ggplot2")
install.packages(c("BH", "data.table", "Rcpp", "rlang", "scales", "servr", "shiny", "tibble"))
install.packages("shiny"); install.packages("LDAvis"); install.packages("XML"); install.packages("xml2"); install.packages("RCurl"); install.packages("httr"); install.packages("lda"); install.packages("servr"); install.packages("markdown"); install.packages("data.table"); install.packages("stringr"); install.packages("plyr"); install.packages("ggplot2")
install.packages('stylo')
detach("package:utils", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:datasets", unload=TRUE)
library("stats", lib.loc="/usr/lib/R/library")
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/usr/lib/R/library")
detach("package:stats", unload=TRUE)
install.packages(plotly)
install.packages("plotly")
install.packages("plotly")
plot_ly(lotr, x = ~Race, color = ~Film) %>% add_histogram()
plot_ly(lotr, x = ~Race, color = ~Film) %>% add_histogram()
starwars
library(dplyr)
library(ggplot2)
starwars
p <- ggplot(starwars) +
geom_point(aes(x = height, y = mass))
ggplotly(p)
library(plotly)
library("plotly")
install.packages("plotly")
install.packages(c("plotly", "tidyverse"))
install.packages("xml2")
install.packages("plotly")
install.packages("tidyverse")
p <- ggplot(starwars) +
geom_point(aes(x = height, y = mass))
ggplotly(p)
library(plotly)
p <- ggplot(starwars) +
geom_point(aes(x = height, y = mass))
ggplotly(p)
lots
lotr
installed.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("xml2")
install.packages("tidyverse")
install.packages("rvest")
install.packages("libxml2-dev")
install.packages("xml2")
install.packages("rvest")
install.packages("tidyverse")
install.packages('plotly')
plot_ly(lotr, x = ~Words) %>% add_histogram()
plot_ly(midwest, x = ~popdensity, y = ~percollege) %>%
add_markers(color = ~state, colors = viridis::viridis(5))
library(plotly)
library(tidyverse)
storms_yearly <- storms %>%
group_by(year) %>%
summarise(num = length(unique(name)))
plot_ly(storms_yearly, x = ~year, y = ~num) %>%
add_lines()
devtools::install_github("jbkunst/highcharter")
install.packages("devtools")
install.packages("highcharter")
library(highcharter)
lotr
library(readr)
lotr_clean <- read_csv("Documents/DH/Summer2018/dataviz/iowa_ds_graphics-master/lotr_clean.tsv")
View(lotr_clean)
lotr
lotr_clean
lotr <- read_tsv('https://raw.githubusercontent.com/jennybc/lotr/master/lotr_clean.tsv')
lotr
hchart(lotr, "column", hcaes(x = Race, y = n, group = Film))
hchart(midwest, "scatter", hcaes(x = popdensity, y== percollege, group = state))
hchart(midwest, "scatter", hcaes(x = popdensity, y = percollege, group = state))
x11()
x11()
hchart(midwest, "scatter", hcaes(x = popdensity, y = percollege, group = state))
gss_cat
hchart(gss_cat, "scatter", hcaes(x = age, y = income))
hchart(gss_cat, "scatter", hcaes(x = age, y = rincome))
hchart(gss_cat, "scatter", hcaes(x = age, y = rincome, group = year))
hchart(gss_cat, "scatter", hcaes(x = race, y = rincome, group = year))
detach(highcharter)
detach(highchart())
detach.package(highchater)
detach("highchater")
?detach
>library()
?library''
?library
detach(highcharter)
devtools::install_github("jbkunst/highcharter")
hc <- hc %>%
hc_title(text = 'Number of Words Spoken in Lord of the Rings Films',
align = 'left') %>%
hc_subtitle(text = 'Broken down by <i>Film</i> and <b>Race</b>',
align = 'left') %>%
hc_legend(align = 'right', verticalAlign = 'top', layout = 'vertical',
x = 0, y = 80) %>%
hc_exporting(enabled = TRUE)
library(highcharter)
lotr_count <- lotr %>%
count(Film, Race)
hchart(lotr_count, "column", hcaes(x = Race, y = n, group = Film))
hc <- hc %>%
hc_title(text = 'Number of Words Spoken in Lord of the Rings Films',
align = 'left') %>%
hc_subtitle(text = 'Broken down by <i>Film</i> and <b>Race</b>',
align = 'left') %>%
hc_legend(align = 'right', verticalAlign = 'top', layout = 'vertical',
x = 0, y = 80) %>%
hc_exporting(enabled = TRUE)
hc <- hc %>%
hc_xAxis(title = list(text = "Race")) %>%
hc_yAxis(title = list(text = "Number of Words Spoken"),
showLastLabel = FALSE)
hc <- hc %>%
hc_colors(substr(viridis(3), 0, 7))
hc <- hc %>%
hc_chart(type = 'column')
hc <- highchart() %>%
hc_xAxis(categories = lotr_count$Race) %>%
hc_add_series(name = 'The Fellowship Of The Ring',
data = filter(lotr_count, Film == 'The Fellowship Of The Ring')$n) %>%
hc_add_series(name = 'The Two Towers',
data = filter(lotr_count, Film == 'The Two Towers')$n) %>%
hc_add_series(name = 'The Return Of The King',
data = filter(lotr_count, Film == 'The Return Of The King')$n)
hc
hc <- hc %>%
hc_chart(type = 'column')
hc
hc <- hc %>%
hc_colors(substr(viridis(3), 0, 7))
hc <- hc %>%
hc_colors(substr(viridis(3), 0, 7))
library(viridis)
hc <- hc %>%
hc_colors(substr(viridis(3), 0, 7))
hc
hc <- hc %>%
hc_xAxis(title = list(text = "Race")) %>%
hc_yAxis(title = list(text = "Number of Words Spoken"),
showLastLabel = FALSE)
hc
hc <- hc %>%
hc_title(text = 'Number of Words Spoken in Lord of the Rings Films',
align = 'left') %>%
hc_subtitle(text = 'Broken down by <i>Film</i> and <b>Race</b>',
align = 'left') %>%
hc_legend(align = 'right', verticalAlign = 'top', layout = 'vertical',
x = 0, y = 80) %>%
hc_exporting(enabled = TRUE)
hc
library(plotly)
library(tidyverse)
p <- ggplot(data = midwest) +
geom_point(mapping = aes(x = popdensity, y = percollege))
ggplotly(p)
p <- ggplot(midwest,
aes(x = popdensity, y = percollege, color = state)) +
geom_point() +
scale_x_continuous("Population Density",
breaks = seq(0, 80000, 20000)) +
scale_y_continuous("Percent College Graduates") +
scale_color_discrete("State") +
theme_bw()
ggplotly(p)
plot_ly(lotr, x = ~Words) %>% add_histogram()
knitr::opts_chunk$set(fig.width=12, fig.height=6, fig.cap = NULL)
library(plotly)
library(tidyverse)
p <- ggplot(data = midwest) +
geom_point(mapping = aes(x = popdensity, y = percollege))
ggplotly(p)
p <- ggplot(midwest,
aes(x = popdensity, y = percollege, color = state)) +
geom_point() +
scale_x_continuous("Population Density",
breaks = seq(0, 80000, 20000)) +
scale_y_continuous("Percent College Graduates") +
scale_color_discrete("State") +
theme_bw()
ggplotly(p)
lotr <- read_tsv('https://raw.githubusercontent.com/jennybc/lotr/master/lotr_clean.tsv')
lotr
one_plot <- function(d) {
plot_ly(d, x = ~Words) %>%
add_histogram() %>%
add_annotations(
~unique(Film), x = 0.5, y = 1,
xref = "paper", yref = "paper", showarrow = FALSE
)
}
lotr %>%
split(.$Film) %>%
lapply(one_plot) %>%
subplot(nrows = 1, shareX = TRUE, titleX = FALSE) %>%
hide_legend()
plot_ly(lotr, x = ~Race, color = ~Film) %>% add_histogram()
# number of diamonds by cut and clarity (n)
lotr_count <- count(lotr, Race, Film)
# number of diamonds by cut (nn)
lotr_prop <- left_join(lotr_count, count(lotr_count, Race, wt = n))
lotr_prop %>%
mutate(prop = n / nn) %>%
plot_ly(x = ~Race, y = ~prop, color = ~Film) %>%
add_bars() %>%
layout(barmode = "stack")
plot_ly(midwest, x = ~popdensity, y = ~percollege) %>%
add_markers()
plot_ly(midwest, x = ~popdensity, y = ~percollege) %>%
add_markers(symbol = ~state)
plot_ly(midwest, x = ~popdensity, y = ~percollege) %>%
add_markers(color = ~state, colors = viridis::viridis(5))
storms_yearly <- storms %>%
group_by(year) %>%
summarise(num = length(unique(name)))
plot_ly(storms_yearly, x = ~year, y = ~num) %>%
add_lines()
library(highcharter)
lotr_count <- lotr %>%
count(Film, Race)
hchart(lotr_count, "column", hcaes(x = Race, y = n, group = Film))
hchart(midwest, "scatter", hcaes(x = popdensity, y = percollege, group = state))
hchart(lotr$Words)
hc <- highchart() %>%
hc_xAxis(categories = lotr_count$Race) %>%
hc_add_series(name = 'The Fellowship Of The Ring',
data = filter(lotr_count, Film == 'The Fellowship Of The Ring')$n) %>%
hc_add_series(name = 'The Two Towers',
data = filter(lotr_count, Film == 'The Two Towers')$n) %>%
hc_add_series(name = 'The Return Of The King',
data = filter(lotr_count, Film == 'The Return Of The King')$n)
hc
hc <- hc %>%
hc_chart(type = 'column')
hc
hc <- hc %>%
hc_colors(substr(viridis(3), 0, 7))
hc
hc <- hc %>%
hc_xAxis(title = list(text = "Race")) %>%
hc_yAxis(title = list(text = "Number of Words Spoken"),
showLastLabel = FALSE)
hc
hc <- hc %>%
hc_title(text = 'Number of Words Spoken in Lord of the Rings Films',
align = 'left') %>%
hc_subtitle(text = 'Broken down by <i>Film</i> and <b>Race</b>',
align = 'left') %>%
hc_legend(align = 'right', verticalAlign = 'top', layout = 'vertical',
x = 0, y = 80) %>%
hc_exporting(enabled = TRUE)
hc
select(storms, wind, pressure, ts_diameter, hu_diameter) %>%
cor(use = "pairwise.complete.obs") %>%
hchart()
setwd("~/Documents/DH/TOPAN")
install.packages("shiny")
?shiny
installed.packages()
library(shiny)
sessionInfo()
runApp("/ToPan-master/")
runApp('ToPan-master')
runApp('ToPan-master')
runApp('ToPan-master')
detach("package:shiny", unload=TRUE)
detach("package:bitops", unload=TRUE)
detach("package:httr", unload=TRUE)
detach("package:lda", unload=TRUE)
detach("package:RCurl", unload=TRUE)
setwd("~/")
library(stylo)
setwd("~/Documents/WOAH/91/corpus/moda")
oppose()
oppose()
setwd("~/Documents/WOAH/91/corpus/modb")
oppose()
setwd("~/Documents/WOAH/91/corpus/modc")
oppose()
setwd("~/Documents/WOAH/91/corpus/modx")
oppose()
